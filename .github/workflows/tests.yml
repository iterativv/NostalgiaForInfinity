name: CI

on: [push, pull_request]

jobs:
  Pre-Commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 10
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - id: changed-files
        name: Check changed files
        uses: dorny/paths-filter@v3
        with:
          token: ${{ github.token }}
          list-files: shell
          filters: |
            repo:
              - added|modified: ['**']
      - run: echo "PY=$(python --version --version | sha256sum | cut -d' ' -f1)" >> $GITHUB_ENV
      - uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: pre-commit|${{ env.PY }}|${{ hashFiles('.pre-commit-config.yaml') }}
      - name: Check ALL Files On Branch
        uses: pre-commit/action@v3.0.1
        if: github.event_name != 'pull_request'
      - name: Check Changed Files On PR
        uses: pre-commit/action@v3.0.1
        if: github.event_name == 'pull_request'
        with:
          extra_args: --files ${{ steps.changed-files.outputs.repo_files }}

  Backtest:
    if: github.event_name != 'pull_request'
    needs: Pre-Commit
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        EXCHANGE: [binance, kucoin]
        TRADING_MODE: [spot, futures]
        exclude:
          - EXCHANGE: kucoin
            TRADING_MODE: futures
        TIMERANGE:
          # - 20251201-20260101
          # - 20251101-20251201
          # - 20251001-20251101
          # - 20250901-20251001
          # - 20250801-20250901
          # - 20250701-20250801
          # - 20250601-20250701
          - 20250501-20250601
          - 20250401-20250501
          - 20250301-20250401
          - 20250201-20250301
          - 20250101-20250201
          - 20241201-20250101
          - 20241101-20241201
          - 20241001-20241101
          - 20240901-20241001
          - 20240801-20240901
          - 20240701-20240801
          - 20240601-20240701
          - 20240501-20240601
          - 20240401-20240501
          - 20240301-20240401
          - 20240201-20240301
          - 20240101-20240201
          # - 20231201-20240101
          # - 20231101-20231201
          # - 20231001-20231101
          # - 20230901-20231001
          # - 20230801-20230901
          # - 20230701-20230801
          # - 20230601-20230701
          # - 20230501-20230601
          # - 20230401-20230501
          # - 20230301-20230401
          # - 20230201-20230301
          # - 20230101-20230201
          # - 20221201-20230101
          # - 20221101-20221201
          # - 20221001-20221101
          # - 20220901-20221001
          # - 20220801-20220901
          # - 20220701-20220801
          # - 20220601-20220701
          # - 20220501-20220601
          # - 20220401-20220501
          # - 20220301-20220401
          # - 20220201-20220301
          # - 20220101-20220201
          # - 20211201-20220101
          # - 20211101-20211201
          # - 20211001-20211101
          # - 20210901-20211001
          # - 20210801-20210901
          # - 20210701-20210801
          # - 20210601-20210701
          # - 20210501-20210601
          # - 20210401-20210501
          # - 20210301-20210401
          # - 20210201-20210301
          # - 20210101-20210201

    steps:
      - uses: actions/checkout@v4

      - name: Fetch data for backtests
        env:
          EXCHANGE: ${{ matrix.EXCHANGE }}
          TRADING_MODE: ${{ matrix.TRADING_MODE }}
          TIMEFRAME: 5m
          TIMERANGE: ${{ matrix.TIMERANGE }}
          HELPER_TIME_FRAMES: 5m 15m 1h 4h 8h 1d
        run: |
          .github/workflows/scripts/download-necessary-exchange-market-data-for-backtests.sh

      - name: Inject proxy config
        if: ${{ matrix.EXCHANGE == 'binance' }}
        env:
          PROXY: ${{ secrets.FREQTRADE_PROXY }}
        run: |
          for file in configs/proxy-binance.json; do
            jq --arg proxy "$PROXY" \
            '.exchange.ccxt_config = {
              http_proxy: $proxy
            }' "$file" > tmp.json && mv tmp.json "$file"
          done

      - name: Run Backtests
        run: |
          mkdir artifacts
          chmod 777 artifacts
          export COLUMNS=240
          docker build -f docker/Dockerfile.custom --no-cache -t ci-strategy-backtesting . > /dev/null 2>&1
          docker run -v ".:/testing" -v "./user_data/data:/testing/user_data/data" --rm \
            -w /testing --entrypoint "" -e "COLUMNS=240" \
            --env-file .github/workflows/scripts/ci-proxy.env \
            ci-strategy-backtesting \
            python -m pytest -ra -vv -s --log-cli-level=info --artifacts-path=artifacts/ \
            -p no:cacheprovider tests/backtests -k '${{ matrix.EXCHANGE }} and ${{ matrix.TRADING_MODE }} and ${{ matrix.TIMERANGE }}'

      - name: Show Backtest Output
        run: cat artifacts/backtest-output-${{ matrix.EXCHANGE }}-${{ matrix.TRADING_MODE }}-${{ matrix.TIMERANGE }}.txt

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.EXCHANGE }}-${{ matrix.TRADING_MODE }}-testrun-artifacts-${{ matrix.TIMERANGE }}
          path: artifacts/

  Merge-Artifacts:
    if: always() && github.event_name != 'pull_request'
    needs: Backtest
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        EXCHANGE: [binance, kucoin]
        TRADING_MODE: [spot, futures]
        exclude:
          - EXCHANGE: kucoin
            TRADING_MODE: futures
    steps:
      - name: Merge Artifacts
        uses: actions/upload-artifact/merge@v4
        with:
          name: ${{ matrix.EXCHANGE }}-${{ matrix.TRADING_MODE }}-testrun-artifacts
          pattern: ${{ matrix.EXCHANGE }}-${{ matrix.TRADING_MODE }}-testrun-artifacts-*

  Comment-CI-Results:
    if: always() && github.event_name != 'pull_request'
    needs: Merge-Artifacts
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: read
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install Dependencies
        run: |
          python -m pip install -r tests/ci-requirements.txt

      - name: Download Previous Kucoin CI Artifacts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python .github/workflows/scripts/download-previous-artifacts.py \
            --repo=${{ github.event.repository.full_name }} \
            --branch=main \
            --workflow=tests.yml \
            --exchange=kucoin \
            --tradingmode=spot \
            --name=kucoin-spot-testrun-artifacts downloaded-results

      - name: Download Previous Binance Spot CI Artifacts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python .github/workflows/scripts/download-previous-artifacts.py \
            --repo=${{ github.event.repository.full_name }} \
            --branch=main \
            --workflow=tests.yml \
            --exchange=binance \
            --tradingmode=spot \
            --name=binance-spot-testrun-artifacts downloaded-results

      - name: Download Previous Binance Futures CI Artifacts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python .github/workflows/scripts/download-previous-artifacts.py \
            --repo=${{ github.event.repository.full_name }} \
            --branch=main \
            --workflow=tests.yml \
            --exchange=binance \
            --tradingmode=futures \
            --name=binance-futures-testrun-artifacts downloaded-results

      - name: Download Current Binance Futures CI Artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: binance-futures-testrun-artifacts
          path: downloaded-results/current

      - name: Download Current Binance Spot CI Artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: binance-spot-testrun-artifacts
          path: downloaded-results/current

      - name: Download Current Kucoin CI Artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: kucoin-spot-testrun-artifacts
          path: downloaded-results/current

      - name: Flatten downloaded artifacts
        run: |
          find downloaded-results/current -type f -name 'backtest-output-*.txt' -exec mv {} downloaded-results/current/ \;

      - name: Pre Format Backtest Results
        run: |
          find downloaded-results/ -type f -iname *.txt -exec sed -i 's/└.*┘//g' {} +
          find downloaded-results/ -type f -iname *.txt -exec sed -i 's/┏.*┓//g' {} +
          find downloaded-results/ -type f -iname *.txt -exec sed -i 's/┡/|/g' {} +
          find downloaded-results/ -type f -iname *.txt -exec sed -i 's/┃/|/g' {} +
          find downloaded-results/ -type f -iname *.txt -exec sed -i 's/╇/:|/g' {} +
          find downloaded-results/ -type f -iname *.txt -exec sed -i 's/━/-/g' {} +
          find downloaded-results/ -type f -iname *.txt -exec sed -i 's/│/|/g' {} +
          find downloaded-results/ -type f -iname *.txt -exec sed -i 's/┩/:|/g' {} +
          find downloaded-results/ -type f -iname *.txt -exec sed -i 's/BACKTESTING REPORT/\n## BACKTESTING REPORT\n/g' {} +
          find downloaded-results/ -type f -iname *.txt -exec sed -i 's/LEFT OPEN TRADES REPORT/\n## LEFT OPEN TRADES REPORT\n/g' {} +
          find downloaded-results/ -type f -iname *.txt -exec sed -i 's/ENTER TAG STATS/\n## ENTER TAG STATS\n/g' {} +
          find downloaded-results/ -type f -iname *.txt -exec sed -i 's/EXIT REASON STATS/\n## EXIT REASON STATS\n/g' {} +
          find downloaded-results/ -type f -iname *.txt -exec sed -i 's/MIXED TAG STATS/\n## MIXED TAG STATS\n/g' {} +
          find downloaded-results/ -type f -iname *.txt -exec sed -i 's/DAY BREAKDOWN/\n## DAY BREAKDOWN\n/g' {} +
          find downloaded-results/ -type f -iname *.txt -exec sed -i 's/SUMMARY METRICS/\n## SUMMARY METRICS\n/g' {} +
          find downloaded-results/ -type f -iname *.txt -exec sed -i 's/STRATEGY SUMMARY/\n## STRATEGY SUMMARY\n/g' {} +

      - name: Comment CI Results
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python .github/workflows/scripts/comment-ci-results.py \
            --repo=${{ github.event.repository.full_name }} downloaded-results
