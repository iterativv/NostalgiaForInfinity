name: CI

on: [push, pull_request]

jobs:
  Pre-Commit:
    runs-on: ubuntu-latest
    steps:
      - name: Fetch Source Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 10
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install black
        run: |
          pip install black==23.7.0
      - id: changed-files
        name: Get Changed Files
        uses: dorny/paths-filter@v2
        with:
          token: ${{ github.token }}
          list-files: shell
          filters: |
            repo:
              - added|modified:
                - '**'
      - name: Set Cache Key
        run: echo "PY=$(python --version --version | sha256sum | cut -d' ' -f1)" >> $GITHUB_ENV
      - uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: pre-commit|${{ env.PY }}|${{ hashFiles('.pre-commit-config.yaml') }}
      - name: Check ALL Files On Branch
        uses: pre-commit/action@v3.0.0
        if: github.event_name != 'pull_request'
      - name: Check Changed Files On PR
        uses: pre-commit/action@v3.0.0
        if: github.event_name == 'pull_request'
        with:
          extra_args: --files ${{ steps.changed-files.outputs.repo_files }}

  Binance-Backtests-Spot:
    runs-on: ubuntu-latest
    needs:
      - Pre-Commit
    strategy:
      fail-fast: false
      matrix:
        timerange:
          - 20240101-20240301
          - 20240301-20240601
          - 20240601-20240901
          - 20240901-20250101
          - 20250101-20250301
          #- 20250301-20250601
          #- 20250601-20250901
          #- 20250901-20260101
          #- 20260101-20260301
          #- 20260301-20260601
          #- 20260601-20260901
          #- 20260901-20270101

    steps:
      - name: Fetch Source Code
        uses: actions/checkout@v4

      - name: Fetch data for backtests from https://github.com/iterativv/NostalgiaForInfinityData
        env:
          EXCHANGE: binance
          TRADING_MODE: spot
          TIMEFRAME: 5m
          TIMERANGE: ${{ matrix.timerange }}
          HELPER_TIME_FRAMES: 5m 15m 1h 4h 1d
        run: |
          .github/workflows/scripts/download-necessary-exchange-market-data-for-backtests.sh

      - name: Inject proxy config into proxy-binance.json
        env:
          PROXY: ${{ secrets.FREQTRADE_PROXY }}
        run: |
          for file in configs/proxy-binance.json; do
            jq --arg proxy "$PROXY" \
            '.exchange.ccxt_config = {
              http_proxy: $proxy
            }' "$file" > tmp.json && mv tmp.json "$file"
          done

      - name: Run Tests
        run: |
          mkdir artifacts
          chmod 777 artifacts
          chmod 777 -R ./user_data
          export COLUMNS=240
          docker build -f docker/Dockerfile.custom --no-cache -t ci-strategy-backtesting .
          docker run -v ".:/testing" -v "./user_data/data:/testing/user_data/data" --rm \
            -w /testing --entrypoint "" -e "COLUMNS=240" \
            ci-strategy-backtesting \
            python -m pytest -ra -vv -s --log-cli-level=info --artifacts-path=artifacts/ \
            -p no:cacheprovider tests/backtests -k 'binance and spot and ${{ matrix.timerange }}'

      - name: Show Backtest Output
        run: |
          cat artifacts/backtest-output-binance-spot-${{ matrix.timerange }}.txt
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: binance-spot-testrun-artifacts-${{ matrix.timerange }}
          path: artifacts/

  Merge-Binance-Spot:
    runs-on: ubuntu-latest
    needs: Binance-Backtests-Spot
    if: always()
    steps:
      - name: Merge Artifacts
        uses: actions/upload-artifact/merge@v4
        with:
          name: binance-spot-testrun-artifacts
          pattern: binance-spot-testrun-artifacts-*

  Binance-Backtests-Futures:
    runs-on: ubuntu-latest
    needs: Pre-Commit
    strategy:
      fail-fast: false
      matrix:
        timerange:
          - 20240101-20240301
          - 20240301-20240601
          - 20240601-20240901
          - 20240901-20250101
          - 20250101-20250301
          #- 20250301-20250601
          #- 20250601-20250901
          #- 20250901-20260101
          #- 20260101-20260301
          #- 20260301-20260601
          #- 20260601-20260901
          #- 20260901-20270101
    steps:
      - name: Fetch Source Code
        uses: actions/checkout@v4

      - name: Fetch data for backtests from https://github.com/iterativv/NostalgiaForInfinityData
        env:
          EXCHANGE: binance
          TRADING_MODE: futures
          TIMEFRAME: 5m
          TIMERANGE: ${{ matrix.timerange }}
          HELPER_TIME_FRAMES: 5m 15m 1h 4h 1d
        run: |
          .github/workflows/scripts/download-necessary-exchange-market-data-for-backtests.sh

      - name: Inject proxy config into proxy-binance.json
        env:
          PROXY: ${{ secrets.FREQTRADE_PROXY }}
        run: |
          for file in configs/proxy-binance.json; do
            jq --arg proxy "$PROXY" \
            '.exchange.ccxt_config = {
              http_proxy: $proxy
            }' "$file" > tmp.json && mv tmp.json "$file"
          done

      - name: Run Tests
        run: |
          mkdir artifacts
          chmod 777 artifacts
          chmod 777 -R ./user_data
          export COLUMNS=240
          docker build -f docker/Dockerfile.custom --no-cache -t ci-strategy-backtesting .
          docker run -v ".:/testing" -v "./user_data/data:/testing/user_data/data" --rm \
            -w /testing --entrypoint "" -e "COLUMNS=240" \
            ci-strategy-backtesting \
            python -m pytest -ra -vv -s --log-cli-level=info --artifacts-path=artifacts/ \
            -p no:cacheprovider tests/backtests -k 'binance and futures and ${{ matrix.timerange }}'
      - name: Show Backtest Output
        run: |
          cat artifacts/backtest-output-binance-futures-${{ matrix.timerange }}.txt
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: binance-futures-testrun-artifacts-${{ matrix.timerange }}
          path: artifacts/

  Merge-Binance-Futures:
    runs-on: ubuntu-latest
    needs: Binance-Backtests-Futures
    if: always()
    steps:
      - name: Merge Artifacts
        uses: actions/upload-artifact/merge@v4
        with:
          name: binance-futures-testrun-artifacts
          pattern: binance-futures-testrun-artifacts-*

  Kucoin-Backtests-Spot:
    runs-on: ubuntu-latest
    needs:
      - Pre-Commit
    strategy:
      fail-fast: false
      matrix:
        timerange:
          - 20240101-20240301
          - 20240301-20240601
          - 20240601-20240901
          - 20240901-20250101
          - 20250101-20250301
          #- 20250301-20250601
          #- 20250601-20250901
          #- 20250901-20260101
          #- 20260101-20260301
          #- 20260301-20260601
          #- 20260601-20260901
          #- 20260901-20270101

    steps:
      - name: Fetch Source Code
        uses: actions/checkout@v4

      - name: Fetch data for backtests from https://github.com/iterativv/NostalgiaForInfinityData
        env:
          EXCHANGE: kucoin
          TRADING_MODE: spot
          TIMEFRAME: 5m
          TIMERANGE: ${{ matrix.timerange }}
          HELPER_TIME_FRAMES: 5m 15m 1h 4h 1d
        run: |
          .github/workflows/scripts/download-necessary-exchange-market-data-for-backtests.sh

      - name: Run Tests
        run: |
          mkdir artifacts
          chmod 777 artifacts
          chmod 777 -R ./user_data
          export COLUMNS=240
          docker build -f docker/Dockerfile.custom --no-cache -t ci-strategy-backtesting .
          docker run -v ".:/testing" -v "./user_data/data:/testing/user_data/data" --rm \
            -w /testing --entrypoint "" -e "COLUMNS=240" --env-file .github/workflows/scripts/ci-proxy.env \
            ci-strategy-backtesting \
            python -m pytest -ra -vv -s --log-cli-level=info --artifacts-path=artifacts/ \
            -p no:cacheprovider tests/backtests -k 'kucoin and spot and ${{ matrix.timerange }}'

      - name: Show Backtest Output
        run: |
          cat artifacts/backtest-output-kucoin-spot-${{ matrix.timerange }}.txt

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: kucoin-testrun-artifacts-${{ matrix.timerange }}
          path: artifacts/

  Merge-Kucoin-Spot:
    runs-on: ubuntu-latest
    needs: Kucoin-Backtests-Spot
    if: always()
    steps:
      - name: Merge Artifacts
        uses: actions/upload-artifact/merge@v4
        with:
          name: kucoin-testrun-artifacts
          pattern: kucoin-testrun-artifacts-*

  Backtest-CI-Stats:
    runs-on: ubuntu-latest
    needs:
      - Kucoin-Backtests-Spot
      - Binance-Backtests-Spot
      - Binance-Backtests-Futures

    if: always()
    permissions:
      contents: write
      actions: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install Dependencies
        run: |
          python -m pip install -r tests/ci-requirements.txt

      - name: Download Previous Kucoin CI Artifacts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python .github/workflows/scripts/download-previous-artifacts.py \
            --repo=${{ github.event.repository.full_name }} \
            --branch=main \
            --workflow=tests.yml \
            --exchange=kucoin \
            --name=kucoin-testrun-artifacts downloaded-results

      - name: Download Previous Binance Spot CI Artifacts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python .github/workflows/scripts/download-previous-artifacts.py \
            --repo=${{ github.event.repository.full_name }} \
            --branch=main \
            --workflow=tests.yml \
            --exchange=binance \
            --name=binance-spot-testrun-artifacts downloaded-results

      - name: Download Previous Binance Futures CI Artifacts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python .github/workflows/scripts/download-previous-artifacts.py \
            --repo=${{ github.event.repository.full_name }} \
            --branch=main \
            --workflow=tests.yml \
            --exchange=binance \
            --name=binance-futures-testrun-artifacts downloaded-results

      - name: Download Current Kucoin CI Artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: kucoin-testrun-artifacts
          path: downloaded-results/current

      - name: Download Current Binance Spot CI Artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: binance-spot-testrun-artifacts
          path: downloaded-results/current

      - name: Download Current Binance Futures CI Artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: binance-futures-testrun-artifacts
          path: downloaded-results/current

      - name: Pre Format Backtest Results
        run: |
          find downloaded-results/ -type f -iname *.txt -exec sed -i 's/└.*┘//g' {} +
          find downloaded-results/ -type f -iname *.txt -exec sed -i 's/┏.*┓//g' {} +
          find downloaded-results/ -type f -iname *.txt -exec sed -i 's/┡/|/g' {} +
          find downloaded-results/ -type f -iname *.txt -exec sed -i 's/┃/|/g' {} +
          find downloaded-results/ -type f -iname *.txt -exec sed -i 's/╇/:|/g' {} +
          find downloaded-results/ -type f -iname *.txt -exec sed -i 's/━/-/g' {} +
          find downloaded-results/ -type f -iname *.txt -exec sed -i 's/│/|/g' {} +
          find downloaded-results/ -type f -iname *.txt -exec sed -i 's/┩/:|/g' {} +
          find downloaded-results/ -type f -iname *.txt -exec sed -i 's/BACKTESTING REPORT/\n## BACKTESTING REPORT\n/g' {} +
          find downloaded-results/ -type f -iname *.txt -exec sed -i 's/LEFT OPEN TRADES REPORT/\n## LEFT OPEN TRADES REPORT\n/g' {} +
          find downloaded-results/ -type f -iname *.txt -exec sed -i 's/ENTER TAG STATS/\n## ENTER TAG STATS\n/g' {} +
          find downloaded-results/ -type f -iname *.txt -exec sed -i 's/EXIT REASON STATS/\n## EXIT REASON STATS\n/g' {} +
          find downloaded-results/ -type f -iname *.txt -exec sed -i 's/MIXED TAG STATS/\n## MIXED TAG STATS\n/g' {} +
          find downloaded-results/ -type f -iname *.txt -exec sed -i 's/DAY BREAKDOWN/\n## DAY BREAKDOWN\n/g' {} +
          find downloaded-results/ -type f -iname *.txt -exec sed -i 's/SUMMARY METRICS/\n## SUMMARY METRICS\n/g' {} +
          find downloaded-results/ -type f -iname *.txt -exec sed -i 's/STRATEGY SUMMARY/\n## STRATEGY SUMMARY\n/g' {} +
      - name: Show Environ
        run: |
          env

      - name: Show Downloaded Artifacts
        run: |
          tree downloaded-results
      - name: Flatten downloaded artifacts
        run: |
          find downloaded-results/current -type f -name 'backtest-output-*.txt' -exec mv {} downloaded-results/current/ \;

      - name: Comment CI Results
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python .github/workflows/scripts/comment-ci-results.py \
            --repo=${{ github.event.repository.full_name }} downloaded-results
